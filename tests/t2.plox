//a simple list structure

class Node{
    init(data){
        this.data = data;
        this.prev = nil;
        this.next = nil;
    }
}

class List{
    init(){
        this.front = nil;
        this.back = nil;
        this.length = 0;
    }
    append(data){
        var node = Node(data);
        
        this.length = this.length + 1;
        
        if(this.front == nil){
            this.front = this.back = node;
        }
        else{
            node.prev = this.back;
            this.back.next = node;
            this.back = node;
        }
    }
    at(index){
        if(this.isEmpty()) return nil;
        var cont = 0;
        for(var p = this.front; p != nil; p = p.next){
            if(cont == index) return p.data;
            cont = cont + 1;    
        }
    }
    isEmpty(){
        return this.length == 0;
    }
}

var L = List();

L.append(1);
L.append(2);
L.append(3);
L.append(4);
L.append(5);
L.append(6);
L.append(7);

for(var i = 0; i < L.length; i = i + 1){
    print L.at(i);
}

// expected output : 1 2 3 4 5 6 7

